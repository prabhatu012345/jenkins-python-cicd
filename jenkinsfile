pipeline {
    agent {
        kubernetes {
            label 'jenkins-pipeline'
            defaultContainer 'jnlp'
            yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-pipeline
spec:
  serviceAccountName: jenkins-ksa
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    # Jenkins will handle the arguments automatically
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-home
  - name: python
    image: python:3.9
    command:
    - cat
    tty: true
  volumes:
  - name: jenkins-home
    emptyDir: {}
            '''
        }
    }

    environment {
        NEXUS_URL = 'http://nexus.prod.urbanbamboo.in:8081/repository/prabhat/'
        TWINE_CREDENTIALS_ID = 'nexus-credentials'
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    git url: 'https://github.com/prabhatu012345/jenkins-python-cicd.git', branch: 'main'
                }
            }
        }

        stage('Set Up Python Environment') {
           container('python'){
            steps {
                script {
                    sh 'python3 -m venv venv'
                    sh '''
                    source venv/bin/activate
                    pip install --upgrade pip
                    '''
                }
            }
        }
      }

        stage('Install Dependencies') {
            container('python'){
            steps {
                script {
                    sh '''
                    source venv/bin/activate
                    pip install -r requirements.txt
                    '''
                }
            }
        }
    }

        stage('Build and Package') {
            container('python'){
            steps {
                script {
                    sh '''
                    source venv/bin/activate
                    python setup.py sdist bdist_wheel
                    '''
                }
            }
        }
     }

        stage('Upload to Nexus') {
            container('python'){
            steps {
                script {
                    sh '''
                    source venv/bin/activate
                    pip install twine
                    twine upload --repository-url $NEXUS_URL -u $TWINE_USERNAME -p $TWINE_PASSWORD dist/*
                    '''
                }
            }
        }
    }
}
