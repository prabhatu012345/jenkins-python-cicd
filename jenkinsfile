pipeline {
    agent {
        kubernetes {
            label 'jenkins-pipeline'
            defaultContainer 'jnlp'
            yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-pipeline
spec:
  serviceAccountName: jenkins-ksa
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:latest
    # Jenkins will handle the arguments automatically
    volumeMounts:
    - mountPath: /var/jenkins_home
      name: jenkins-home
  - name: python
    image: python:3.9
    command:
    - cat
    tty: true
  volumes:
  - name: jenkins-home
    emptyDir: {}
            '''
        }
    }

    environment {
        NEXUS_URL = 'https://nexus.prod.urbanbamboo.in/repository/external-python-pipeline/'
        TWINE_CREDENTIALS_ID = 'nexus-credential-1'
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    git url: 'https://github.com/prabhatu012345/jenkins-python-cicd.git', branch: 'main'
                }
            }
        }

        stage('Set Up Python Environment') {
            steps {
                container('python') {
                    script {
                        sh '''
                        python3 -m venv venv
                        . venv/bin/activate
                        pip install --upgrade pip
                        '''
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                container('python') {
                    script {
                        sh '''
                        . venv/bin/activate
                        pip install -r requirements.txt
                        pip install wheel  # Ensure wheel is installed
                        '''
                    }
                }
            }
        }

        stage('Build and Package') {
            steps {
                container('python') {
                    script {
                        sh '''
                        . venv/bin/activate
                        python setup.py sdist bdist_wheel
                        '''
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                container('python') {
                    script {
                        sh '''
                        . venv/bin/activate
                        export PYTHONPATH=$(pwd)  # Set PYTHONPATH to the current working directory
                        pytest tests/test_hello.py --maxfail=1 --disable-warnings -q
                        '''
                    }
                }
            }
        }

        stage('Upload to Nexus') {
            steps {
                container('python') {
                    script {
                        withCredentials([usernamePassword(credentialsId: "${TWINE_CREDENTIALS_ID}", usernameVariable: 'TWINE_USERNAME', passwordVariable: 'TWINE_PASSWORD')]) {
                            sh '''
                            . venv/bin/activate
                            pip install twine
                            twine upload --repository-url $NEXUS_URL -u $TWINE_USERNAME -p $TWINE_PASSWORD dist/*
                            '''
                        }
                    }
                }
            }
        }
    }
}
